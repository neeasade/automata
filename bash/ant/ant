#!/usr/bin/env bash
#
# ant - langton's ant implementation

die() {
    echo "$1" >&2
    exit 1
}

helper() {
    declare -n var="$1"

    ((var = $2)) &> /dev/null

    [[ $var ]]  || die "usage : ${0##*/} [height] [width] [iter]"
    ((var < 0)) && die "error : '$var' isn't a valid positive integer"
}

helper X "$1"
helper Y "$2"
helper N "$3"

((
    ANT_X = X / 2,
    ANT_Y = Y / 2,
    DIR = 0
))

declare -A uni

for ((n = 0; n < N; ++n)) {
    out="P1\n$Y $X\n"

    for ((i = 0; i < X; ++i)) {
        for ((j = 0; j < Y; ++j)) {
            out+=$((uni[$i $j]))
        }
    }

    ((DIR = (DIR + ((uni[$ANT_X $ANT_Y] ^=1 ) == 0 ? 1 : -1) + 4) % 4))

    case $DIR in
        0) ((ANT_X = (--ANT_X + X) % X));;
        1) ((ANT_Y = (++ANT_Y + Y) % Y));;
        2) ((ANT_X = (++ANT_X + X) % X));;
        3) ((ANT_Y = (--ANT_Y + Y) % Y))
    esac

    printf '%b\n' "$out"
}
