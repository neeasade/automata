#!/usr/bin/env bash
#
# wireworld - wireworld

COLORS=(
    '016 032 041'
    '113 170 197'
    '201 100 126'
    '237 238 240'
)

usage() {
    while IFS= read -r line; do
        printf '%s\n' "$line"
    done << EOF
usage : ${0##*/} [-i <number>] [file]

options :
    -i <number>    iterate <number> times (default : 500)
EOF
} >&2

convert_to_number() {
    declare -n var=$1

    { printf -v var '%d' "$2" &> /dev/null || ((var < 0)); } || {
        echo "error : '$2' isn't a valid positive integer" >&2
        exit 1
    }
}

wireworld() {
    declare -A uni

    { mapfile -t input < "$file"; } 2> /dev/null ||
        usage

    ((
        height = ${#input[@]},
        width  = ${#input[0]}
    ))

    ((flag = 0))

    for ((i = 0; i < height; ++i)) {
        for ((j = 0; j < width; ++j)) {
            ((uni[$i $j $flag] = ${input[i]:j:1}))
        }
    }

    for ((n = 0; n < iter; ++n)) {
        printf 'P3\n%s %s\n255\n' "$width" "$height"

        for ((i = 0; i < height; ++i)) {
            for ((j = 0; j < width; ++j)) {
                printf '%s\n' "${COLORS[uni[$i $j $flag]]}"

                case $((uni[$i $j $flag])) in
                    0) ((tmp = 0));;
                    1) ((tmp = 2));;
                    2) ((tmp = 3));;
                    3)
                        ((cnt = 0))

                        for ((k = -1; k <= 1; ++k)) {
                            for ((l = -1; l <= 1; ++l)) {
                                ((k != 0 || l != 0)) && {
                                    ((
                                        x = (i + k + height) % height,
                                        y = (j + l +  width) %  width
                                    ))

                                    ((uni[$x $y $flag] == 1)) &&
                                        ((++cnt))
                                }
                            }
                        }

                    ((tmp = (cnt == 1 || cnt == 2) ? 1 : 3))
                esac

                ((uni[$i $j $((!flag))] = tmp))
            }
        }

        ((flag ^= 1))
    }
}

((iter = 500))

file=

while (($#)); do
    case $1 in
        -i)
            [[ $2 ]] \
                && convert_to_number iter "$2" \
                || usage

            shift
            ;;
        --) break;;
        -*) usage;;
         *) file=$1
     esac

     shift
done

[[ $file ]] || usage

wireworld
