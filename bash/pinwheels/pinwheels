#!/usr/bin/env bash
#
# pinwheel - pinwheel implementation

cd "${0%.*}" && . ../main

RULES=(
    '--+---00000+---++'
    '------00000++++++'
    '--+++-00000+++-++'
)

COLORS=(
    '016 032 041'
    '113 170 197'
    '237 238 240'
)

usage="usage : ${0##*/} [height] [width] [init] [iter]"

helper X "$1"
helper Y "$2"
helper I "$3"
helper N "$4"

declare -A uni

((t = 0))

for ((i = 0; i < I; ++i)) {
    ((
        x = RANDOM % X,
        y = RANDOM % Y
    ))

    ((uni[$x $y $t] = RANDOM % 2 == 0 ? -1 : 1))
}

declare -A rules

for i in "${!RULES[@]}"; {
    for ((j = 0; j < ${#RULES[i]}; ++j)) {
        case ${RULES[i]:j:1} in
            +) ((rules[$i $j] =  1));;
            -) ((rules[$i $j] = -1));;
            0) ((rules[$i $j] =  0));;
        esac
    }
}

for ((n = 0; n < N; ++n)) {
    out="P3\n$Y $X\n255\n"

    for ((i = 0; i < X; ++i)) {
        for ((j = 0; j < Y; ++j)) {
            out+="${COLORS[uni[$i $j $t]]}\n"

            ((cnt = 0))

            for u in -1 0 1; {
                for v in -1 0 1; {
                    ((u != 0 || v != 0)) && {
                        ((
                            x = (i + u + X) % X,
                            y = (j + v + Y) % Y
                        ))

                        ((cnt += uni[$x $y $t]))
                    }
                }
            }

            ((uni[$i $j $((!t))] = rules[$((uni[$i $j $t] + 1)) $((cnt + 8))]))
        }
    }

    ((t ^= 1))

    printf '%b\n' "$out"
}
